// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Locadora {
  idLocadora   Int       @id @default(autoincrement())
  NomeLocadora String    @unique
  created_at   DateTime  @default(dbgenerated("now()")) @db.DateTime
  Veiculo      Veiculo[]
}

model ModeloVeiculo {
  idModelo   Int       @id @default(autoincrement())
  montadora  String
  modelo     String    @unique
  created_at DateTime  @default(dbgenerated("now()")) @db.DateTime
  Veiculo    Veiculo[]
}

model Opm {
  idOpm      Int       @id @default(autoincrement())
  NomeOpm    String    @unique
  ComandoOpm String
  created_at DateTime  @default(dbgenerated("now()")) @db.DateTime
  Veiculo    Veiculo[]
}

model User {
  cpf_user   String   @id @db.VarChar(15)
  name       String
  email      String   @unique
  password   String
  adm        Boolean? @default(false)
  funcao     Int?
  created_at DateTime @default(dbgenerated("now()")) @db.DateTime
  Funcao     Funcao?  @relation(fields: [funcao], references: [id_funcao], onDelete: Cascade, onUpdate: Cascade)
}

model Veiculo {
  placa         String        @id @db.VarChar(10)
  prefixo       String        @unique @db.VarChar(10)
  quilometragem Int
  combustivel   Float
  modeloId      Int
  OPMID         Int
  locadoraId    Int
  created_at    DateTime      @default(dbgenerated("now()")) @db.DateTime
  locadora      Locadora      @relation(fields: [locadoraId], references: [idLocadora], onDelete: Cascade, onUpdate: Cascade)
  modeloVeiculo ModeloVeiculo @relation(fields: [modeloId], references: [idModelo], onDelete: Cascade, onUpdate: Cascade)
  Opm           Opm           @relation(fields: [OPMID], references: [idOpm], onDelete: Cascade, onUpdate: Cascade)
  vistoria      Vistoria[]


}

model Funcao {
  id_funcao   Int    @id @default(autoincrement())
  nome_funcao String
  User        User[]


}

model Photos {
  idPhotos   String   @id @default(uuid())
  urlPhotos  String
  created_at DateTime @default(dbgenerated("now()")) @db.DateTime()
  Vistoria   Vistoria @relation(fields: [idPhotos], references: [idVistoria], onDelete: Cascade, onUpdate: Cascade)

}

model Vistoria {
  idVistoria     String   @id @default(uuid())
  veiculoPlaca   String   @db.VarChar(10)
  id_user        String   @db.VarChar(13)
  condutorCpf    String
  nome_condutor  String
  situacao       String   @db.Char(2)
  destinoId      String
  tipo_veiculo   String   @db.VarChar(10)
  dados_vistoria Json
  obs            String
  created_at     DateTime @default(dbgenerated("now()")) @db.DateTime
  Veiculo        Veiculo  @relation(fields: [veiculoPlaca], references: [placa], onDelete: Cascade, onUpdate: Cascade)
  Photos         Photos[]


}
