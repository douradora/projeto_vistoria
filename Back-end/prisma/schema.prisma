// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Locadora {
  id_locadora   Int       @id @default(autoincrement())
  nome_locadora String    @unique
  created_at    DateTime  @default(dbgenerated("now()")) @db.DateTime
  Veiculo       Veiculo[]
}

model ModeloVeiculo {
  id_modelo  Int       @id @default(autoincrement())
  montadora  String
  modelo     String    @unique
  created_at DateTime  @default(dbgenerated("now()")) @db.DateTime
  Veiculo    Veiculo[]
}

model Opm {
  id_opm      Int       @id @default(autoincrement())
  nome_opm    String    @unique
  comando_opm String
  created_at  DateTime  @default(dbgenerated("now()")) @db.DateTime
  Veiculo     Veiculo[]
}

model User {
  cpf_user   String   @id @db.VarChar(15)
  name       String
  email      String   @unique
  password   String
  is_adm     Boolean? @default(false)
  funcao     Int?
  created_at DateTime @default(dbgenerated("now()")) @db.DateTime
  Funcao     Funcao?  @relation(fields: [funcao], references: [id_funcao], onDelete: Cascade, onUpdate: Cascade)
}

model Veiculo {
  placa          String        @id @db.VarChar(10)
  prefixo        String        @unique @db.VarChar(10)
  modelo_id      Int
  opm_id         Int
  locadora_id    Int
  created_at     DateTime      @default(dbgenerated("now()")) @db.DateTime
  locadora       Locadora      @relation(fields: [locadora_id], references: [id_locadora], onDelete: Cascade, onUpdate: Cascade)
  modelo_veiculo ModeloVeiculo @relation(fields: [modelo_id], references: [id_modelo], onDelete: Cascade, onUpdate: Cascade)
  Opm            Opm           @relation(fields: [opm_id], references: [id_opm], onDelete: Cascade, onUpdate: Cascade)
  vistoria       Vistoria[]


}

model Funcao {
  id_funcao   Int    @id @default(autoincrement())
  nome_funcao String
  User        User[]


}

model Photos {
  id_photos  String   @id @default(uuid())
  url_photos String
  created_at DateTime @default(dbgenerated("now()")) @db.DateTime()



}

model Vistoria {
  id_vistoria           String @id @default(uuid())
  veiculo_placa         String @db.VarChar(10)
  veiculo_combustivel   Float
  veiculo_quilometragem Int
  id_user               String @db.VarChar(13)
  condutor_cpf          String
  condutor_nome         String
  situacao              String @db.Char(2)
  destino_id      String
  tipo_veiculo   String   @db.VarChar(10)
  dados_vistoria Json
  obs            String
  id_photos_fk   String?
  created_at     DateTime @default(dbgenerated("now()")) @db.DateTime
  Veiculo        Veiculo  @relation(fields: [veiculo_placa], references: [placa], onDelete: Cascade, onUpdate: Cascade)



}
